@inherits LayoutComponentBase
@inject NavigationManager NavigationManager
@inject IPersonService PersonService
@using VagtplanApp.Client.Services;

<div class="page">
    @if (!IsLoginPage()) // Viser sidebar hvis brugeren ikke er på login-siden
    {
        <div class="sidebar">
            <NavMenu />
        </div>
    }

    <main>
        <div class="top-row px-4">
            <a href="login" @onclick="LogOut">Log Out</a> <!-- Log ud knap, fører til login-siden -->
        </div>

        <!-- Indhold af den aktuelle side, vises her -->
        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

@code {    
    private bool isUserLoggedIn; // Bool til at se om brugeren er logget ind
    private bool isKoordinator; // Bool til at se om brugeren er en koordinator

    // Initialiserer og tjekker brugerens login-status
    protected override async Task OnInitializedAsync()
    {
        // Kontrollerer, om brugeren er logget ind ved at kalde IsUserLoggedInAsync fra PersonService.
        isUserLoggedIn = await PersonService.IsUserLoggedInAsync();

        // Tjekker, om den nuværende bruger er en koordinator.
        isKoordinator = PersonService.IsKoordinator();

        // Får den relative URI fra NavigationManager (fjerner base-path fra URI'en).
        var uri = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);

        // Hvis brugeren ikke er logget ind:
        if (!isUserLoggedIn)
        {
            // Hvis den aktuelle URL ikke er 'login', omdiriger brugeren til login-siden.
            if (uri != "login")
            {
                NavigationManager.NavigateTo("/login");
            }
        }
        else // Hvis brugeren er logget ind:
        {
            // Hvis brugeren er koordinator, og forsøger at tilgå en frivillig-specifik side:
            if (isKoordinator && uri.StartsWith("volunteer"))
            {
                // Omdiriger til koordinatorens oversigtsside.
                NavigationManager.NavigateTo("/coordinator-all-shifts");
            }
            // Hvis brugeren er frivillig, og forsøger at tilgå en koordinator-specifik side:
            else if (!isKoordinator && uri.StartsWith("coordinator"))
            {
                // Omdiriger til frivilligens mine vagter side.
                NavigationManager.NavigateTo("/volunteer-my-shifts");
            }
        }
    }

    // Tjekker om den nuværende side er login-siden
    private bool IsLoginPage()
    {
        return NavigationManager.Uri.Contains("/login");
    }

    // Logger brugeren ud og omdirigerer til login-siden
    private async Task LogOut()
    {
        await PersonService.LogOut();
        NavigationManager.NavigateTo("/login"); // Omdirigerer til login-siden
    }
}
