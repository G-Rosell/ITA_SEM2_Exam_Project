@using VagtplanApp.Client.Services
@inject IPersonService PersonService
@inject NavigationManager NavigationManager

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="/">VagtplanApp</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

@if (isUserLoggedIn)
{
    <div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
        <nav class="flex-column">
            @if (isKoordinator)
            {
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="koordinator-side">
                        <span class="oi oi-plus" aria-hidden="true"></span> Koordinatorside
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="koordinator-profil">
                        <span class="oi oi-plus" aria-hidden="true"></span> Koordinatorprofil
                    </NavLink>
                </div>
            }
            else if (!isKoordinator)
            {
                <div class="nav-item">
                    <NavLink class="nav-link" href="/frivillig-side">
                        <span class="oi oi-plus" aria-hidden="true"></span> Frivillig side
                    </NavLink>
                </div>
                <div class="nav-item">
                    <NavLink class="nav-link" href="/frivillig-profil">
                        <span class="oi oi-plus" aria-hidden="true"></span> Frivillig profil
                    </NavLink>
                </div>
            }
        </nav>
    </div>
}


@code {
    private bool collapseNavMenu = true;
    private bool isUserLoggedIn;
    private bool isKoordinator;



    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    protected override async Task OnInitializedAsync()
    {
        isUserLoggedIn = await PersonService.IsUserLoggedInAsync();
        isKoordinator = PersonService.IsKoordinator(); // Antager at dette er synkront, ellers skal det håndteres asynkront

    }
}
